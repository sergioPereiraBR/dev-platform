# ./pyproject.toml
[project]
name = "dev-platform"
version = "0.1.0"
description = ""
authors = [
    {name = "Sergio Pereira",email = "sergiopereira.br@hotmail.com"}
]
readme = "README.md"
requires-python = ">=3.11,<4.0"
dependencies = [
    "pymysql (>=1.1.1,<2.0.0)",
    "aiomysql (>=0.2.0,<0.3.0)",
    "typer (>=0.15.4,<0.16.0)",
    "pydantic (>=2.11.5,<3.0.0)",
    "loguru (>=0.7.3,<0.8.0)",
    "uuid (>=1.30,<2.0)",
    "alembic (>=1.16.1,<2.0.0)",
    "sqlalchemy (>=2.0.41,<3.0.0)",
    "python-dotenv (>=1.1.0,<2.0.0)",
    "pandas (>=2.3.0,<3.0.0)",
    "cryptography (>=45.0.4,<46.0.0)",
    "pydantic-settings (>=2.9.1,<3.0.0)",
]

[tool.poetry]
packages = [{include = "dev_platform", from = "src"}]

[tool.poetry.group.dev.dependencies]
black = "^23.0"
flake8 = "^6.0"
taskipy = "^1.14.1"
reportlab = "^4.4.1"
chardet = "^5.2.0"
pypandoc = "^1.15"
mypy = "^1.16.0"
pytest-asyncio = "^1.0.0"
types-reportlab = "^4.4.1.20250602"
matplotlib = "^3.10.3"
numpy = "^2.3.0"
python-dateutil = "^2.9.0.post0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
pymdown-extensions = "^10.15"
mkdocstrings = "^0.29.1"
mkdocstrings-python = "^1.16.10"
sphinx = "^6.0"
sphinx-rtd-theme = "^1.0"
mkdocs-material = "^9.6.14"


[tool.poetry.group.test.dependencies]
pytest = "^8.3.5"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# Configuração opcional para definir o script principal
[tool.poetry.scripts]
dev-platform = "dev_platform.main:main"  # Isso cria um comando executável
docs-serve = "mkdocs:serve"  # Iniciar servidor de documentação local
docs-build = "mkdocs:build"  # Construir a documentação estática

[tool.taskipy.tasks]
list = "poetry run python ./src/dev_platform/main.py user list-users"
clean = "pwsh -Command ./scripts/tools/del_folderes.ps1 './src' '__pycache__'"
stack = "pwsh -Command ./scripts/tools/stack_files.ps1 './src' 'py'"
files2pdf = "poetry run python ./scripts/tools/pdf_generator.py ./src/stake_file --title \"Arquivos do Projeto DEV Platform\" -v"
analise_md2word = "poetry run python ./scripts/tools/md_to_word.py ./docs/análise_26.md" # Converte o arquivo Markdown em Word - Melhor no WSL Ubuntu 20.04
onboarding_md2word = "poetry run python ./scripts/tools/md_to_word.py ./docs/onboarding_26.md" # Converte o arquivo Markdown em Word - Melhor no WSL Ubuntu 20.04

[tool.mypy]
python_version = "3.11"
plugins = "pydantic.mypy"
